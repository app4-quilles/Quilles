# This workflow generates a jar, then uploads it to GitHub releases

name: Submit Version

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: jar-artifact # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: target/*.jar
        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #warn: Output a warning but do not fail the action
        #error: Fail the action with an error message
        #ignore: Do not output any warnings or errors, the action does not fail
        
        #if-no-files-found: # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        #Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
        
        #retention-days: # optional

  publish-to-release:
    needs: build
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3.0.2
        #with:
          # Artifact name
          #name: artifact-ubuntu-latest # optional
          # Destination path
          #path: # optional
      # https://github.com/softprops/action-gh-release
      - name: Display structure of downloaded files
        run: ls -R
      - name: GH Release
        # You may pin to the exact commit or the version.
        # uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        uses: softprops/action-gh-release@v0.1.15
        with:
          # Note-worthy description of changes in release
          #body: # optional
          # Path to load note-worthy description of changes in release from
          #body_path: # optional
          # Gives the release a custom name. Defaults to tag name
          #name: # optional
          # Gives a tag name. Defaults to github.GITHUB_REF
          #tag_name: # optional
          # Creates a draft release. Defaults to false
          draft: true # optional
          # Identify the release as a prerelease. Defaults to false
          #prerelease: # optional
          # Newline-delimited list of path globs for asset files to upload
          files: | # optional
            jar-artifact/*.jar
          # Fails if any of the `files` globs match nothing. Defaults to false
          #fail_on_unmatched_files: # optional
          # Repository to make releases against, in <owner>/<repo> format
          #repository: # optional
          # Authorized secret GitHub Personal Access Token. Defaults to github.token
          #token: # optional, default is ${{ github.token }}
          # Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA.
          #target_commitish: # optional
          # If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored.
          #discussion_category_name: # optional
          # Whether to automatically generate the name and body for this release. If name is specified, the specified name will be used; otherwise, a name will be automatically generated. If body is specified, the body will be pre-pended to the automatically generated notes.
          #generate_release_notes: # optional
          # Append to existing body instead of overwriting it. Default is false.
          #append_body: # optional